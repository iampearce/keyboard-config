/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM 1
#define SYM 2
#define FUN 3
#define NAV 4
#define MSE 5
#define MED 6

&lt {
	tapping-term-ms = <300>;
	quick_tap_ms = <200>;
	flavor = "hold-preferred";
	};

/ {

combos {
	compatible = "zmk,combos";
	combo_caps {
		timeout-ms = <50>;
		key-positions = <02 04>;
		bindings = <&kp CAPS>;
		layers = <DEFAULT>;
		};
	combo_wordcaps {
		timeout-ms = <50>;
		key-positions = <03 04>;
		bindings+ = <&caps_word>;
		layers = <DEFAULT>;
		};
	};

behaviors {
	hmi: homerow_mods_index {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS_INDEX";
		#binding-cells = <2>;
		tapping-term-ms = <180>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
		};
	hmr: homerow_mods_ring {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS_RING";
		#binding-cells = <2>;
		tapping-term-ms = <210>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
		};
	hml: homerow_mods_long {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS_LONG";
		#binding-cells = <2>;
		tapping-term-ms = <300>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
		};
	};

        keymap {
                compatible = "zmk,keymap";

default_layer {
		bindings = <
		&trans       &kp Q       &kp W       &kp F        &kp P        &kp B           &kp J     &kp L        &kp U            &kp Y          &hmr DQT SQT       &trans
		&trans       &hmr LGUI A &hmr LALT R &hmi LCTRL S &hmi LSHFT T &kp G           &kp M     &hmi RSHFT N &hmi RCTRL E     &hmr LALT I    &hmr RGUI O        &trans
		&trans       &kp Z       &kp X       &kp C        &kp D        &kp V           &kp K     &kp H        &hmi EXCL COMMA  &hmr QMARK DOT &hmr COLON SEMI    &trans
		                       &lt FUN TAB   &lt MSE RET  &lt NUM SPACE             &lt SYM BSPC   &lt NAV DEL   &lt MED ESC
		>;
	};
	num_layer {
		bindings = <
		&trans       &hmr GRAVE TILDE &kp N7    &kp N8    &kp N9    &kp COMMA        &trans     &trans     &trans    &trans   &reset     &trans
		&trans       &kp NON_US_HASH  &kp N4    &kp N5    &kp N6    &kp N0           &trans     &kp RSHFT  &kp RCTRL &kp LALT &kp RGUI   &trans
		&trans       &hmr HASH PRCNT  &kp N1    &kp N2    &kp N3    &kp DOT          &trans     &trans     &trans    &trans   &trans     &trans
		                                       &trans    &trans    &trans           &trans     &trans     &trans
		>;
	};
	sym_layer {
		bindings = <
		&trans       &reset     &trans     &trans     &trans     &trans             &kp PLUS   &hmi LBRC LBKT &hml CARET STAR &hmr RBRC RBKT &kp AT      &trans
		&trans       &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans             &kp UNDER  &kp LPAR       &kp EQUAL       &kp RPAR       &kp DLLR    &trans
		&trans       &trans     &trans     &trans     &trans     &trans             &kp MINUS  &kp LT         &hml BSLH FSLH  &kp GT         &kp AMPS    &trans
		                                   &trans     &trans     &trans             &trans     &trans         &trans
		>;
	};
	fun_layer {
		bindings = <
		&trans       &kp F12    &kp F7     &kp F8     &kp F9     &trans             &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &trans
		&trans       &kp F11    &kp F4     &kp F5     &kp F6     &trans             &trans       &kp RSHFT    &kp RCTRL    &kp LALT     &kp RGUI         &trans
		&trans       &kp F10    &kp F1     &kp F2     &kp F3     &trans             &trans       &trans       &trans       &trans       &trans           &trans
		                                   &trans     &trans     &trans             &out OUT_USB       &out OUT_BLE       &bt BT_CLR
		>;
	};
	nav_layer {
		bindings = <
		&trans       &trans     &trans     &trans     &trans     &trans             &trans     &kp LC(LEFT)     &kp LC(DOWN)      &kp LC(UP)      &kp LC(RIGHT)  &trans
		&trans       &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans             &trans     &kp LEFT         &kp DOWN          &kp UP          &kp RIGHT      &trans
		&trans       &kp LC(Z)  &kp LC(X)  &kp LC(C)  &trans     &kp LC(V)          &trans     &kp LA(LEFT)     &kp LA(DOWN)      &kp LA(UP)      &kp LA(RIGHT)  &trans
		                                  &trans     &trans     &trans             &trans     &trans           &trans
		>;
	};
	mse_layer {
		bindings = <
		&trans       &trans     &trans     &trans     &trans     &trans             &trans     &trans     &trans     &trans     &trans   &trans
		&trans       &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans             &trans     &kp RSHFT  &kp RCTRL  &kp LALT   &kp RGUI &trans
		&trans       &trans     &trans     &trans     &trans     &trans             &trans     &trans     &trans     &trans     &trans   &trans
		                                  &trans     &trans     &trans             &trans     &trans     &trans
		>;
	};
	med_layer {
	bindings = <
		&trans       &trans     &trans     &trans     &trans     &trans             &kp C_VOL_UP &kp C_RW   &kp K_STOP2 &kp C_FF   &kp C_BRI_UP  &trans
		&trans       &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans             &kp K_MUTE   &kp C_PREV &kp C_PP    &kp C_NEXT &trans        &trans
		&trans       &trans     &trans     &trans     &trans     &trans             &kp C_VOL_DN &trans     &trans      &trans     &kp C_BRI_DN  &trans
		                                  &trans     &trans     &trans             &trans       &trans     &trans
		>;
	};
	};
};
