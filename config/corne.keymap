/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM 1
#define SYM 2
#define FUN 3
#define NAV 4
#define MSE 5
#define MED 6

&lt {
	tapping-term-ms = <300>;
	quick_tap_ms = <200>;
	flavor = "hold-preferred";
	};

/ {

combos {
	compatible = "zmk,combos";
	combo_caps {
		timeout-ms = <50>;
		key-positions = <02 04>;
		bindings = <&kp CAPS>;
		layers = <DEFAULT>;
		};
	};

behaviors {
	hmi: homerow_mods_index {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS_INDEX";
		#binding-cells = <2>;
		tapping-term-ms = <180>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
		};
	hmr: homerow_mods_ring {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS_RING";
		#binding-cells = <2>;
		tapping-term-ms = <210>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
		};
	hml: homerow_mods_long {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS_LONG";
		#binding-cells = <2>;
		tapping-term-ms = <300>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
		};
	};

        keymap {
                compatible = "zmk,keymap";

default_layer {
		bindings = <
		&none       &kp Q       &kp W       &kp E        &kp R        &kp T           &kp Y     &kp U        &kp I            &kp O          &kp P       &none
		&none       &hmr LGUI A &hmr LALT S &hmi LCTRL D &hmi LSHFT F &kp G           &kp H     &hmi RSHFT J &hmi RCTRL K     &hmr LALT L    &hmr RGUI SQT       &none
		&none       &kp Z       &kp X       &kp C        &kp V        &kp B           &kp N     &kp M        &hmi EXCL COMMA  &hmr QMARK DOT &hmr COLON SEMI    &none
		                       &lt FUN TAB   &lt SYM RET  &lt NUM SPACE             &lt NAV BSPC   &lt MSE DEL   &lt MED ESC
		>;
	};
	num_layer {
		bindings = <
		&none		&kp N1		&kp N2		&kp N3		&kp N4		&kp N5				&kp N6		&kp N7		&kp N8		&kp N9		&kp N0		&none
		&none		&kp LGUI	&kp LALT	&kp LCTRL	&kp LSHFT	&trans				&kp PLUS	&kp N4		&kp N5 		&kp N6		&kp PIPE	&none
		&none		&trans		&trans		&trans		&trans		&trans				&kp EQUAL	&kp N1		&kp N2		&kp N3		&trans		&none
											&trans		&trans		&trans				&kp N0		&trans		&trans
		>;
	};
	sym_layer {
		bindings = <
		&none		&kp EXCL	&kp AT		&kp NON_US_HASH	&kp DLLR	&kp PRCNT			&kp CARET		&kp AMPS		&kp STAR		&kp LPAR		&kp RPAR		&none
		&none		&kp LGUI	&kp LALT	&kp LCTRL		&kp LSHFT	&trans				&kp MINUS		&kp DLLR		&kp PRCNT		&kp CARET		&kp GRAVE			&none
		&none		&trans		&trans		&trans			&trans		&trans				&kp UNDER		&kp EXCL		&kp AT			&kp NON_US_HASH	&kp TILDE		&none
											&trans			&trans		&trans				&hml BSLH FSLH	&hml LBRC LBKT	&hml RBRC RBKT
		>;
	};
	fun_layer {
		bindings = <
		&none       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4		&trans		&kp F7		&kp F8		&kp F9		&kp F12		&none
		&none       &kp LGUI	&kp LALT	&kp LCTRL		&kp LSHFT	&trans				&trans		&kp F4		&kp F5		&kp F6		&kp F11		&none
		&none       &trans		&trans		&trans			&trans		&trans				&trans		&kp F1		&kp F2		&kp F3		&kp F10		&none
											&trans			&trans		&bt BT_CLR			&trans		&trans		&trans
		>;
	};
	nav_layer {
		bindings = <
		&none       &trans		&kp LC(LEFT)	&kp UP			&kp LC(RIGHT)	&trans					&trans		&trans		&trans		&trans		&trans		&none
		&none       &trans		&kp LEFT		&kp DOWN		&kp RIGHT		&trans					&trans		&kp RSHFT	&kp RCTRL	&kp LALT	&kp RGUI	&none
		&none       &trans		&kp LA(LEFT)	&kp PGDN		&kp LA(RIGHT)	&trans					&trans		&trans		&trans		&trans		&trans		&none
												&kp LC(X)		&kp LC(C)		&kp LC(V)				&trans		&trans		&trans
		>;
	};
	mse_layer {
		bindings = <
		&none		&trans		&trans		&trans			&trans		&trans					&trans		&trans		&trans		&trans		&trans		&none
		&none       &kp LGUI	&kp LALT	&kp LCTRL		&kp LSHFT	&trans					&trans		&kp RSHFT	&kp RCTRL	&kp LALT	&kp RGUI	&none
		&none		&trans		&trans		&trans			&trans		&trans					&trans		&trans		&trans		&trans		&trans		&none
												&trans		&trans		&trans					&trans		&trans		&trans
		>;
	};
	med_layer {
	bindings = <
		&none       &trans     &trans     &trans     &trans     &trans             &kp C_VOL_UP &kp C_RW   &kp K_STOP2 &kp C_FF   &kp C_BRI_UP  &none
		&none       &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans             &kp K_MUTE   &kp C_PREV &kp C_PP    &kp C_NEXT &trans        &none
		&none       &trans     &trans     &trans     &trans     &trans             &kp C_VOL_DN &trans     &trans      &trans     &kp C_BRI_DN  &none
		                                  &trans     &trans     &trans             &trans       &trans     &trans
		>;
	};
	};
	};
